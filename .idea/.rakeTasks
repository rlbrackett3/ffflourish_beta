<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeTask description="Select all Heroku apps for later command" fullCmd="all" taksId="all" /><RakeTask description="Alias for cucumber:ok" fullCmd="cucumber" taksId="cucumber" /><RakeGroup description="" fullCmd="" taksId="cucumber"><RakeTask description="Run all features" fullCmd="cucumber:all" taksId="all" /><RakeTask description="Run features that should pass" fullCmd="cucumber:ok" taksId="ok" /><RakeTask description="Record failing features and run only them if any exist" fullCmd="cucumber:rerun" taksId="rerun" /><RakeTask description="Run features that are being worked on" fullCmd="cucumber:wip" taksId="wip" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Drops all the collections for the database for the current Rails.env" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="mongoid"><RakeTask description="Clean up old collections backed up by objectid_convert" fullCmd="db:mongoid:cleanup_old_collections" taksId="cleanup_old_collections" /><RakeTask description="Create the indexes defined on your mongoid models" fullCmd="db:mongoid:create_indexes" taksId="create_indexes" /><RakeTask description="Convert string objectids in mongo database to ObjectID type" fullCmd="db:mongoid:objectid_convert" taksId="objectid_convert" /></RakeGroup><RakeTask description="Fill database with sample users with posts" fullCmd="db:populate" taksId="populate" /><RakeTask description="Delete data and seed" fullCmd="db:reseed" taksId="reseed" /><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Create the database, and initialize with the seed data" fullCmd="db:setup" taksId="setup" /><RakeTask description="" fullCmd="db:create" taksId="create" /><RakeTask description="" fullCmd="db:create_indexes" taksId="create_indexes" /><RakeTask description="" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate docs for the app -- also availble doc:rails, doc:guides, doc:plugins (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:plugins" taksId="plugins" /><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="heroku"><RakeTask description="Lists configured apps" fullCmd="heroku:apps" taksId="apps" /><RakeTask description="Captures a bundle on Heroku" fullCmd="heroku:capture" taksId="capture" /><RakeTask description="Opens a remote console" fullCmd="heroku:console" taksId="console" /><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Migrates and restarts remote servers" fullCmd="heroku:db:migrate" taksId="migrate" /><RakeTask description="Pulls the database from heroku and stores it into db/dumps/" fullCmd="heroku:db:pull" taksId="pull" /></RakeGroup><RakeTask description="Deploys, migrates and restarts latest code" fullCmd="heroku:deploy" taksId="deploy" /><RakeTask description="Force deploys, migrates and restarts latest code" fullCmd="heroku:force_deploy" taksId="force_deploy" /><RakeTask description="Get remote server information on the heroku app" fullCmd="heroku:info" taksId="info" /><RakeTask description="Shows the Heroku logs" fullCmd="heroku:logs" taksId="logs" /><RakeTask description="Add git remotes for all apps in this project" fullCmd="heroku:remotes" taksId="remotes" /><RakeTask description="Restarts remote servers" fullCmd="heroku:restart" taksId="restart" /><RakeTask description="Setup Heroku deploy environment from heroku.yml config" fullCmd="heroku:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="setup"><RakeTask description="Setup the Heroku addons from heroku.yml config" fullCmd="heroku:setup:addons" taksId="addons" /><RakeTask description="Creates the apps on Heroku" fullCmd="heroku:setup:apps" taksId="apps" /><RakeTask description="Setup the Heroku collaborators from heroku.yml config" fullCmd="heroku:setup:collaborators" taksId="collaborators" /><RakeTask description="Setup the Heroku environment config variables from heroku.yml config" fullCmd="heroku:setup:config" taksId="config" /><RakeTask description="Setup the Heroku domains from heroku.yml config" fullCmd="heroku:setup:domains" taksId="domains" /><RakeTask description="Setup the Heroku stacks from heroku.yml config" fullCmd="heroku:setup:stacks" taksId="stacks" /></RakeGroup><RakeTask description="" fullCmd="heroku:after_deploy" taksId="after_deploy" /><RakeTask description="" fullCmd="heroku:after_each_deploy" taksId="after_each_deploy" /><RakeTask description="" fullCmd="heroku:before_deploy" taksId="before_deploy" /><RakeTask description="" fullCmd="heroku:before_each_deploy" taksId="before_each_deploy" /><RakeTask description="" fullCmd="heroku:switch_environment" taksId="switch_environment" /></RakeGroup><RakeTask description="Select legacy Heroku app for later commands" fullCmd="legacy" taksId="legacy" /><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="parallel"><RakeTask description="create test databases by running db:create for each test db --&gt; parallel:create[num_cpus]" fullCmd="parallel:create[count]" taksId="create[count]" /><RakeTask description="run features in parallel with parallel:features[num_cpus]" fullCmd="parallel:features[count,path_prefix,options]" taksId="features[count,path_prefix,options]" /><RakeTask description="load dumped schema for each test db --&gt; parallel:load_schema[num_cpus]" fullCmd="parallel:load_schema[count]" taksId="load_schema[count]" /><RakeTask description="update test databases by running db:mgrate for each test db --&gt; parallel:migrate[num_cpus]" fullCmd="parallel:migrate[count]" taksId="migrate[count]" /><RakeTask description="update test databases by running db:test:prepare for each test db --&gt; parallel:prepare[num_cpus]" fullCmd="parallel:prepare[count]" taksId="prepare[count]" /><RakeTask description="run spec in parallel with parallel:spec[num_cpus]" fullCmd="parallel:spec[count,path_prefix,options]" taksId="spec[count,path_prefix,options]" /><RakeTask description="run test in parallel with parallel:test[num_cpus]" fullCmd="parallel:test[count,path_prefix,options]" taksId="test[count,path_prefix,options]" /><RakeTask description="" fullCmd="parallel:create" taksId="create" /><RakeTask description="" fullCmd="parallel:features" taksId="features" /><RakeTask description="" fullCmd="parallel:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="parallel:migrate" taksId="migrate" /><RakeTask description="" fullCmd="parallel:prepare" taksId="prepare" /><RakeTask description="" fullCmd="parallel:spec" taksId="spec" /><RakeTask description="" fullCmd="parallel:test" taksId="test" /></RakeGroup><RakeTask description="Select production Heroku app for later commands" fullCmd="production" taksId="production" /><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="Applies the template supplied by LOCATION=/path/to/template" fullCmd="rails:template" taksId="template" /><RakeTask description="Update both configs and public/javascripts from Rails (or use just update:javascripts or update:configs)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeTask description="" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a crytographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Run all specs with rcov" fullCmd="spec:rcov" taksId="rcov" /><RakeTask description="Run the code examples in spec/requests" fullCmd="spec:requests" taksId="requests" /><RakeTask description="Run the code examples in spec/routing" fullCmd="spec:routing" taksId="routing" /><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="" fullCmd="spec:parallel" taksId="parallel" /><RakeGroup description="" fullCmd="" taksId="parallel"><RakeTask description="" fullCmd="spec:parallel:prepare" taksId="prepare" /></RakeGroup><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Select staging Heroku app for later commands" fullCmd="staging" taksId="staging" /><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Runs test:units, test:functionals, test:integration together (also available: test:benchmark, test:profile, test:plugins)" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for {:recent=&gt;&quot;test:prepare&quot;} / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run tests for {:uncommitted=&gt;&quot;test:prepare&quot;} / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:parallel" taksId="parallel" /><RakeTask description="" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:profile" taksId="profile" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="features" taksId="features" /><RakeTask description="" fullCmd="noop" taksId="noop" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /></RakeGroup></Settings>
